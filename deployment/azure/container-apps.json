{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "containerAppName": {
      "type": "string",
      "defaultValue": "nlwebnet",
      "metadata": {
        "description": "Name of the Container App"
      }
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "nlwebnet-env",
      "metadata": {
        "description": "Name of the Container App Environment"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "containerImage": {
      "type": "string",
      "defaultValue": "nlwebnet:latest",
      "metadata": {
        "description": "Container image to deploy"
      }
    },
    "azureOpenAIApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "Azure OpenAI API Key"
      }
    },
    "azureOpenAIEndpoint": {
      "type": "string",
      "metadata": {
        "description": "Azure OpenAI Endpoint"
      }
    },
    "azureSearchApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "Azure Search API Key"
      }
    },
    "azureSearchServiceName": {
      "type": "string",
      "metadata": {
        "description": "Azure Search Service Name"
      }
    }
  },
  "variables": {
    "logAnalyticsWorkspaceName": "[concat(parameters('containerAppName'), '-logs')]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[variables('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2022-03-01",
      "name": "[parameters('environmentName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ],
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))).customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName')), '2021-06-01').primarySharedKey]"
          }
        }
      }
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2022-03-01",
      "name": "[parameters('containerAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]"
      ],
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
        "configuration": {
          "activeRevisionsMode": "Single",
          "ingress": {
            "external": true,
            "targetPort": 8080,
            "allowInsecure": false,
            "traffic": [
              {
                "latestRevision": true,
                "weight": 100
              }
            ]
          },
          "secrets": [
            {
              "name": "azure-openai-api-key",
              "value": "[parameters('azureOpenAIApiKey')]"
            },
            {
              "name": "azure-search-api-key",
              "value": "[parameters('azureSearchApiKey')]"
            }
          ]
        },
        "template": {
          "revisionSuffix": "v1",
          "containers": [
            {
              "name": "nlwebnet",
              "image": "[parameters('containerImage')]",
              "resources": {
                "cpu": 0.5,
                "memory": "1Gi"
              },
              "env": [
                {
                  "name": "ASPNETCORE_ENVIRONMENT",
                  "value": "Production"
                },
                {
                  "name": "ASPNETCORE_URLS",
                  "value": "http://+:8080"
                },
                {
                  "name": "NLWebNet__DefaultMode",
                  "value": "List"
                },
                {
                  "name": "NLWebNet__EnableStreaming",
                  "value": "true"
                },
                {
                  "name": "NLWebNet__RateLimiting__RequestsPerWindow",
                  "value": "1000"
                },
                {
                  "name": "NLWebNet__RateLimiting__WindowSizeInMinutes",
                  "value": "1"
                },
                {
                  "name": "AzureOpenAI__ApiKey",
                  "secretRef": "azure-openai-api-key"
                },
                {
                  "name": "AzureOpenAI__Endpoint",
                  "value": "[parameters('azureOpenAIEndpoint')]"
                },
                {
                  "name": "AzureOpenAI__DeploymentName",
                  "value": "gpt-4"
                },
                {
                  "name": "AzureSearch__ApiKey",
                  "secretRef": "azure-search-api-key"
                },
                {
                  "name": "AzureSearch__ServiceName",
                  "value": "[parameters('azureSearchServiceName')]"
                },
                {
                  "name": "AzureSearch__IndexName",
                  "value": "nlweb-index"
                }
              ],
              "probes": [
                {
                  "type": "Liveness",
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30
                },
                {
                  "type": "Readiness",
                  "httpGet": {
                    "path": "/health/ready",
                    "port": 8080
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 5
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": 1,
            "maxReplicas": 10,
            "rules": [
              {
                "name": "http-scaling",
                "http": {
                  "metadata": {
                    "concurrentRequests": "50"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    "containerAppFQDN": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerAppName'))).configuration.ingress.fqdn]"
    },
    "containerAppUrl": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.App/containerApps', parameters('containerAppName'))).configuration.ingress.fqdn)]"
    }
  }
}